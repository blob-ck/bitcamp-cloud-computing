<?xml version="1.0" encoding="UTF-8"?>

<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
                      http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
  version="4.0"
  metadata-complete="false">
  <!-- metadata-complete="true"로 설정하면 xml설정만 읽어들이겠다는 의미. false로 해야 어노테이션도 사용하겠다는것 -->

    <!-- <request-character-encoding>UTF-8</request-character-encoding> -->
    <!-- 이 방식은 톰캣 9 이후에 만들어졌다. 
        클라이언트가 POST 요청으로 데이터를 보낼 때 한글 데이터를 getParameter()의 리턴값이 깨질 수 있다
    - 이를 해결하려면 다음과 같은 태그를 입력해야한다.
    - 단, 이전 스펙에서는 존재하지 않는 태그이므로, 
    - 필터를 통해 처리해야 한다.
    -->
    <filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
		  <param-name>encoding</param-name>
		  <param-value>UTF-8</param-value>
		</init-param>
    </filter>
    
    <filter-mapping>
        <filter-name>CharacterEncodingFilter</filter-name>
        <url-pattern>/app/*</url-pattern>
    </filter-mapping>

    <listener>
	    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	<context-param>
	    <param-name>contextConfigLocation</param-name>
	    <param-value>classpath:bitcamp/pms/config/application-context.xml</param-value>
	</context-param>

    <welcome-file-list>
        <welcome-file>index.html</welcome-file>
        <welcome-file>index.xhtml</welcome-file>
        <welcome-file>index.htm</welcome-file>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>
    
    <servlet>
        <servlet-name>app</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value></param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>app</servlet-name>
        <url-pattern>/app/*</url-pattern>
    </servlet-mapping>

</web-app>
