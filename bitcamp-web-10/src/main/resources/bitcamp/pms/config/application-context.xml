<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

<!-- XML태그가 정의된 문서를 XML schema 라 부른다. 이걸 먼저 beans 에 참조주소를 넣어줘야 context라는 xml문서를 불러와서 아래 context태그를 사용할 수 있게 된다 -->
<!-- 이렇게 직접 빈을 등록하지 말고, 관련 어노테이션을 붙이기만 하면 자동으로 생성하는 클래스들을 한 패키지(자바에서는 namespace)에 다 넣어놓은 거 -->

<!-- <context:annotation-config/> -->
<!-- 위에 포함된거다 -->
<context:component-scan base-package="bitcamp.pms">
    <context:exclude-filter type="regex" expression="bitcamp.pms.test.*"/>
</context:component-scan>


<!-- sqlSessionFactory 같은 경우 XML에서 생성하면 코드가 지저분하므로, java쪽에서 만들어보자. AppConfig 클래스 참조하기 -->

     <!-- <bean id="sqlSessionFactoryBuilder" class="org.apache.ibatis.session.SqlSessionFactoryBuilder"></bean> -->

	<!-- Object factory = sqlSessionFactoryBuilder.build(inputStream);
	iocContainer.put("sqlSessionFactory", factory);
	와 같은 역할을 수행한다. inputStream같은 객체를 파라미터로 쓰려면  constructor-arg ref="inputStream" 으로 한다
	객체에서 인스턴스 메소드를 호출하여 id이름으로 저장하라는 의미 -->
	<!-- <bean id="sqlSessionFactory" factory-bean="sqlSessionFactoryBuilder" factory-method="build">
	    <constructor-arg ref="inputStream"></constructor-arg>
	</bean> -->
	
	<!-- Object obj =Resources.getResouceAsStream("bitcamp/pms/config/mybatis-config.xml");
	iocContainer.put("inputStream", obj);
	과 같은 역할을 수행한다. 파일을 파라미터로 쓰려면  constructor-arg value="경로" 로 한다
	해당 클래스의 static 메소드를 호출하여 id이름으로 저장하라는 의미 -->
	<!-- <bean id="inputStream" class="org.apache.ibatis.io.Resources" factory-method="getResourceAsStream">
	    <constructor-arg value="bitcamp/pms/config/mybatis-config.xml"></constructor-arg>
	</bean> -->
	
	
	
<!-- 공장 객체를 통해 공장에서 SqlSessionFactory 만들기 
=============== 실행 원리 ====================================
- getObjectType()을 실행하여 
- class 속성에 지정된 클래스가 FactoryBean 구현체라면 
- 그 객체를 저장하는게 아니라 그 객체의 getObject()를 호출하여 그 리턴값을 저장한다.-->
<!-- <bean id="sqlSessionFactory" class="bitcamp.pms.factory.SqlSessionFactoryBean"/> -->

</beans>